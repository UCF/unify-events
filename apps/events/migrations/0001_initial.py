# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-08-17 14:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_bleach.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=64)),
                ('slug', models.SlugField(blank=True, max_length=64)),
                ('description', models.CharField(blank=True, max_length=140, null=True)),
                ('admins', models.ManyToManyField(blank=True, null=True, related_name='admin_calendars', to=settings.AUTH_USER_MODEL)),
                ('editors', models.ManyToManyField(blank=True, null=True, related_name='editor_calendars', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_calendars', to=settings.AUTH_USER_MODEL)),
                ('subscriptions', models.ManyToManyField(blank=True, null=True, related_name='subscribed_calendars', to='events.Calendar')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=128, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=128)),
                ('color', models.CharField(blank=True, max_length=60)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('state', models.SmallIntegerField(choices=[(0, b'pending'), (1, b'posted')], default=1)),
                ('canceled', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('description', django_bleach.models.BleachField()),
                ('contact_name', models.CharField(max_length=64)),
                ('contact_email', models.EmailField(max_length=128, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.Calendar')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.Category')),
                ('created_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='duplicated_to', to='events.Event')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='EventInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('unl_eventdatetime_id', models.PositiveIntegerField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('interval', models.SmallIntegerField(choices=[(0, b'Never'), (1, b'Daily'), (2, b'Weekly'), (3, b'Biweekly'), (4, b'Monthly'), (5, b'Yearly')], default=0)),
                ('until', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_instances', to='events.Event')),
            ],
            options={
                'ordering': ['start', '-end', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=256)),
                ('url', models.URLField(blank=True, max_length=400, null=True)),
                ('room', models.CharField(blank=True, max_length=256, null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('import_id', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'ordering': ['title', 'room'],
            },
        ),
        migrations.AddField(
            model_name='eventinstance',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_instances', to='events.Location'),
        ),
        migrations.AddField(
            model_name='eventinstance',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='events.EventInstance'),
        ),
    ]
